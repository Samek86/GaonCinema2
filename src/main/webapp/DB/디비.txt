/* GAON_CINEMA 테이블 구성 */

/* 테이블 및 시퀀스 삭제 */

DROP TABLE GC_MEMBER;             
DROP SEQUENCE GC_MEMBER_SEQ;      
DROP TABLE GC_NOTICE;             
DROP SEQUENCE GC_NOTICE_SEQ;     
DROP TABLE GC_EVENT;             
DROP SEQUENCE GC_EVENT_SEQ;       
DROP TABLE GC_BOARD_REPLY;        
DROP TABLE GC_BOARD;              
DROP SEQUENCE GC_BOARD_SEQ;       
DROP TABLE GC_MOVIE;             
DROP SEQUENCE GC_MOVIE_SEQ;       
DROP TABLE GC_THEATER_SEAT;      
DROP TABLE GC_THEATER;            
DROP SEQUENCE GC_THEATER_SEQ;     
DROP TABLE GC_RESERVATION;        
DROP SEQUENCE GC_RESERVATION_SEQ; 
COMMIT;


/* 테이블 및 시퀀스 생성 */

DROP TABLE GC_MEMBER;             
DROP SEQUENCE GC_MEMBER_SEQ; 
 
/* GAON_CINEMA_MEMBER 테이블 (회원정보) */
CREATE TABLE GC_MEMBER (
  MEMBER_ID NUMBER(10)        NOT NULL PRIMARY KEY,  --MEMBER 고유키
  USERID    VARCHAR2(20 CHAR) NOT NULL,              --사용자 아이디
  USERPW    VARCHAR2(20 CHAR) NOT NULL,              --사용자 비밀번호
  img_file  varchar2(100 char),                                     --프로필 사진파일
  NAME      VARCHAR2(20 CHAR)  NOT NULL,              --이름
  GENDER    VARCHAR2(5 CHAR)  NOT NULL,              --성별
  BIRTH     DATE              NOT NULL,              --생일
  TELNUM    VARCHAR2(20 CHAR) NOT NULL,              --전화번호
  EMAIL     VARCHAR2(70 CHAR) NOT NULL,              --이메일
  ZIPCODE   VARCHAR2(10 CHAR)  NOT NULL,              --우편번호
  ADDRESS1  VARCHAR2(100 CHAR) NOT NULL,              --주소
  ADDRESS2  VARCHAR2(100 CHAR) NULL,                   --세부주소
  point	    number(10)			   	      --포인트	
);
CREATE SEQUENCE GC_MEMBER_SEQ;


insert into GC_MEMBER values 
	(GC_MEMBER_SEQ.nextval,'admin','1234','img.jpg','관리자','남',sysdate,'1234' ,'12312@123123.com','가온', '시네마','가온시네마',0);



insert into GC_MEMBER values 
	(GC_MEMBER_SEQ.nextval,'hb','1234','img.jpg','김회원','남',sysdate,'1234' ,'12312@123123.com','가온', '시네마','가온시네마',0);


/* GC_NOTICE 테이블 (공지사항) */
CREATE TABLE GC_NOTICE (
  NOTICE_ID NUMBER(10)          NOT NULL PRIMARY KEY,  --NOTICE 고유키
  TITLE     VARCHAR2(30 CHAR)   NOT NULL,              --제목
  CONTENTS  VARCHAR2(3000 CHAR) NOT NULL,              --내용
  WDATE     DATE                NOT NULL,              --작성일
  COUNT     NUMBER(10)          NOT NULL               --조회수
);
CREATE SEQUENCE GC_NOTICE_SEQ;


/* GC_EVENT 테이블 (이벤트) !수정 필요! */
CREATE TABLE GC_EVENT (
  EVENT_ID NUMBER(10)          NOT NULL PRIMARY KEY,  --EVENT 고유키
  TITLE    VARCHAR2(30 CHAR)   NOT NULL,              --제목
  CONTENTS VARCHAR2(3000 CHAR) NOT NULL,              --내용
  WDATE    DATE                NOT NULL,              --작성일
  COUNT    NUMBER(10)          NOT NULL               --조회수
);
CREATE SEQUENCE GC_EVENT_SEQ;


/* GC_BOARD 테이블 (자유게시판) */
CREATE TABLE GC_BOARD (
  BOARD_ID NUMBER(10)          NOT NULL PRIMARY KEY,  --BOARD 고유키
  USERID   VARCHAR2(12 CHAR)   NOT NULL,              --사용자 아이디
  TITLE    VARCHAR2(30 CHAR)   NOT NULL,              --제목
  CONTENTS VARCHAR2(3000 CHAR) NOT NULL,              --내용
  WDATE    DATE                NOT NULL,              --작성일
  COUNT    NUMBER(10)          NOT NULL               --조회수  
);
CREATE SEQUENCE GC_BOARD_SEQ;

/* GC_BOARD_REPLY 테이블 (자유게시판 댓글) */
CREATE TABLE GC_BOARD_REPLY (
  BOARD_ID NUMBER(10)         NOT NULL,  --GC_BOARD 테이블로 외래키 적용
  USERID   VARCHAR2(12 CHAR)  NOT NULL,  --사용자 아이디
  CONTENTS VARCHAR2(100 CHAR) NOT NULL,  --내용
  WDATE    DATE               NOT NULL   --작성일
);
ALTER TABLE GC_BOARD_REPLY ADD CONSTRAINT BOARD_REPLY_FK FOREIGN KEY (BOARD_ID)
REFERENCES GC_BOARD(BOARD_ID) ON DELETE CASCADE;


/* GC_MOVIE 테이블 (영화) */
CREATE TABLE GC_MOVIE (
  MOVIE_ID   NUMBER(10)        NOT NULL PRIMARY KEY,  --MOVIE 고유키
  MNAME      VARCHAR2(50 CHAR) NOT NULL,              --영화 이름
  MGENRE     VARCHAR2(50 CHAR) NOT NULL,              --영화 장르
  MDIRECTOR  VARCHAR2(30 CHAR) NOT NULL,              --영화 감독
  MSTARTDATE DATE              NOT NULL,              --영화 상영 시작일
  MENDDATE   DATE              NOT NULL               --영화 상영 종료일
  
);
CREATE SEQUENCE GC_MOVIE_SEQ;


/* GC_THEATER 테이블 (영화관) */
CREATE TABLE GC_THEATER (
  THEATER_ID NUMBER(10)        NOT NULL PRIMARY KEY,  --THEATER 고유키
  LNAME      VARCHAR2(10 CHAR) NOT NULL,              --지역 이름 (신촌, 강남, 성신)
  TNAME      VARCHAR2(10 CHAR) NOT NULL,              --영화관 이름 (1관, 2관, 3D관, 4D관)
  TTYPE      VARCHAR2(10 CHAR) NOT NULL,              --영화관 종류 (일반, 3D, 4D)
  SEATCOUNT  NUMBER(3)         NOT NULL,              --좌석 개수
  MNAME      VARCHAR2(30 CHAR) NOT NULL,              --영화 이름
  MSTARTHOUR DATE              NOT NULL,              --영화 상영 시작시간
  MENDHOUR   DATE              NOT NULL,              --영화 상영 종료시간
  PRICE      NUMBER(5)         NOT NULL               --가격
);
CREATE SEQUENCE GC_THEATER_SEQ;

/* GC_THEATER_SEAT 테이블 (영화관 좌석) */
CREATE TABLE GC_THEATER_SEAT (
  THEATER_ID NUMBER(10)       NOT NULL,  --GC_THEATER 테이블로 외래키 적용  
  SEAT       VARCHAR2(3 CHAR) NOT NULL,  --좌석 위치 (A01, B02, C03)
  ISRESERVED VARCHAR2(5 CHAR) NOT NULL CHECK(ISRESERVED = 'TRUE' OR ISRESERVED = 'FALSE')  --예약 여부
);
ALTER TABLE GC_THEATER_SEAT ADD CONSTRAINT THEATER_SEAT_FK FOREIGN KEY (THEATER_ID)
REFERENCES GC_THEATER(THEATER_ID) ON DELETE CASCADE;


/* GC_RESERVATION 테이블 (영화 예매) */
CREATE TABLE GC_RESERVATION (
  RESERVATION_ID NUMBER(10)        NOT NULL PRIMARY KEY,  --RESERVATION 고유키
  USERID         VARCHAR2(12 CHAR) NOT NULL,              --사용자 아이디
  LNAME          VARCHAR2(10 CHAR) NOT NULL,              --지역 이름
  TNAME          VARCHAR2(10 CHAR) NOT NULL,              --영화관 이름
  SEAT           VARCHAR2(3 CHAR)  NOT NULL,              --좌석 위치
  MNAME          VARCHAR2(30 CHAR) NOT NULL,              --영화 이름
  MSTART         DATE              NOT NULL,              --영화 시작 시간
  MEND           DATE              NOT NULL,              --영화 종료 시간
  MPRICE         NUMBER(5)         NOT NULL               --영화 가격
);
CREATE SEQUENCE GC_RESERVATION_SEQ;

COMMIT;


select * from GC_member;













